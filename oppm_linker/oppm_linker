NAME
  oppm_linker - rc daemon for automatically linking files in a Git repository to their install location

SYNOPSIS
  rc oppm_linker enable
  rc oppm_linker disable
  rc oppm_linker start [OPTION]...

DESCRIPTION
  The oppm_linker aims to solve the problem with keeping work-in-progress programs on an OpenComputers machine synchronized with files in a Git repository. This is done by having the Git repository installed on the OC machine, adding a `programs.cfg` file to define packages and their install locations, then creating symbolic links from the original files in the places where they would be installed. This simulates what would happen if the packages were all installed with OPPM, but keeps the original files in the Git repo without duplicating them. Since symlinks in OC do not persist across a reboot, oppm_linker runs as a daemon to create the symlinks at each boot.
  
  Setup instructions:
    1. First consider setting `bufferChanges=false` and increasing the value of `hddSizes` for the hard disk you want to use in the OpenComputers configuration. The `bufferChanges` setting prevents the in-game file systems from writing their contents to disk until the world is saved, and this is a problem if using an external editor to write programs. The default hard disk sizes are also quite small and may not fit the whole Git repo.
    
    2. Get OpenOS and OPPM installed on the OC machine (you can craft the floppy disk to install OPPM).
    
    3. Run `mkdir /repository` in-game, then copy the Git repo into here outside of the game or `git clone` one from GitHub. The root of the repo should be in `/repository/<your-repo-name>/.git`. You can add as many repos in here as you want and they will all get loaded by oppm_linker. There is also an OPPM package called `gitrepo` that may be able to do this from within the game.
    
    4. The Git repo should have a valid `programs.cfg` file to define the packages. See `https://ocdoc.cil.li/tutorial:program:oppm` for details.
    
    5. Get oppm_linker installed with `oppm install oppm_linker`, then enable the daemon to run at boot with `rc oppm_linker enable`. It's important for oppm_linker to be the first daemon to run on the system since it sets up binaries, so it should appear as the first entry in `/etc/rc.cfg`. After a reboot (it's usually best to cold-reboot the system by pressing power button), the new symlinks should show up in the package install locations. Note that the symlinks will not show in the physical filesystem outside the game (maybe just on Windows though).
    
    6. If the verbose output from creating symlinks is annoying, add the line `oppm_linker = "-s"` to `/etc/rc.cfg`. This enables the silent option and only errors will show.
  
  To refresh the symlinks if a new package was added or files changed, you can manually run `rc oppm_linker start`. This also helps to debug errors and warnings that may be showing during boot.

OPTIONS
  -s  suppress all normal output (except for errors)
  -f  overwrite existing files and create missing directories

EXAMPLES
  rc oppm_linker start -sf
    Update symlinks silently and force existing files to be replaced.

SEE ALSO
  oppm

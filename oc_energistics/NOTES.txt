Development Notes and Story Tracking (I am too lazy to set up a Jira board right now).

--------------------------------------------------------------------------------
Keep In Mind:
* Want to keep storage network separate from the auto-crafting stuff, so that it can be used independently.

--------------------------------------------------------------------------------
General Tasks:
* Add some dynamic port assignment maybe (start with default port, and switch everybody to new port when they first chat).
* Would be neat to have some security. When system first set up we could keep track of all addresses in a file and validate packets with these.
    * This could also be a performance issue, may want to use broadcasts when communicating with interfaces.
DONE    * wnet needs some adjustments to handle invalid data format (drop these packets).
* Using os.sleep() may be evil, same thing for event.pull() with filter.
    * Need to investigate how signals get dropped and possibly make a separate event library that queues signals.

--------------------------------------------------------------------------------
Storage Tasks:
DONE    * Storage auto imports with redstone comparator and redstone I/O.
* May want to add optional feature to import constantly, the redstone sensor is cool but not really needed.
DONE    * Item formatted name should really use 'n' at end of name to indicate it has NBT and kept separate from other items.
DONE    * Item list sent to interface should use a simpler format, don't need to know insert/extract points in interface.
DONE    * Storage needs to send item diffs when contents change.
            * Maybe interface will need to do a "fake" pending update of contents and confirm when it gets the message (this could be bad idea)?
            * More likely not, doesn't work well with multiple users.
DONE    * We will need to keep a secondary storage table that represents the "available" items, this is reported to interfaces and stuff.
            * This solves the issue of hiding away intermediate ingredients in crafting process.
            * Solution: instead of keeping a second list, just keep list of reserved items and amounts.

--------------------------------------------------------------------------------
Crafting Tasks:
DONE    * Network module needs compressed version and testing with drones.
* For robots, need to have them adjacent to drone inventories for crafting tasks.
    * The robots spin around to access items.
* Storage may need to know which robots can see which inventories.
    * Either have storage fully keep track of which robots see what inventory, and do this by having robots scan adjacent inventories during setup script.
    * Or do this dynamically each boot by dropping items off in any drone inventory and robots report if they can reach (might be tricky).
* Need scheduling algorithm for crafting steps to keep crafting jobs running in parallel.

--------------------------------------------------------------------------------
Interface Tasks:
DONE    * Better item display interface with easy selection.
            * Should feature sorting.
            * Scrolling if possible, else use a key combo with arrow keys instead.
            * Select with arrow keys and enter.
                * Maybe enter + number input for amount, shift-enter for 1, ctrl-enter for stack, ctrl-shift for all?
            * If we have time, consider a color display for this as an option.
                * Click and scroll to get what you want, nice.
DONE    * May be a good idea to convert all GUI draw calls to the lazy system (so we can have redundant draw calls without a problem).
* Scroll bar should be clickable and same for search bar.
DONE    * When clicking item to request, left/right-click prompts input of amount in the search bar (press enter to confirm or enter with empty string to cancel).
            * Shift + left-click grabs one stack, shift + right-click grabs half stack, middle-click grabs one.
            * Middle click doesn't work cuz it doesn't report screen coordinates, right-click grabs one instead.
* Log should display at bottom of GUI and report success/fail of item requests.
    * Maybe also display item insert events and crafting completion?
DONE    * Need to display craftable items along with the rest, crafting system will need some work first.
            * Press left-alt to hide totals and display a 'C' for craftables.

--------------------------------------------------------------------------------
Bugs:
* Too many, thanks lua.
* Got a very strange "process library exception handler crashed: table: <table ID>" when pulling an item out of input inventory (that was unable to insert into storage cuz full).

--------------------------------------------------------------------------------
New System Layout:
* Storage server controls transposer network.
* Crafting server controls auto-crafting jobs and drone flight plans.
* Interface server presents the user interface.

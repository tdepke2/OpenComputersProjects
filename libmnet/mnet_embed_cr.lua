local q,B,H,I,J,L,M,N,O,R,S,T=",",math,"mtuAdjusted","port",pairs,"hostname","floor","dropTime","s1",computer,tonumber,"retransmitTime"local
P=require"component"local
c,u,x,o,n,F,t,w,m,C={},{},{},{},{},{},{},nil,B[M](2^32),{}c[L]=R.address():sub(1,8)c[I]=2048
c.route=true
c.routeTime=30
c[T]=3
c[N]=12
for
z
in
P.list("modem",true)do
C[z]=P.proxy(z)C[z].open(c[I])end
c[H]=8042
local
function
z(v,d,j,f,b,i,g)if
u[f]and
C[u[f][1]]then
C[u[f][1]].send(u[f][2],c[I],v,d,j,f,b,i,g)else
for
e,k
in
J(C)do
k.broadcast(c[I],v,d,j,f,b,i,g)end
end
end
local
function
v(d,j,f,b,i,g)local
e=B.random()local
k=R.uptime()if
not
d
then
d=F[f]if
not
d
then
d=B[M](B.random(1,m))j=O..j
end
d=d%m+1
F[f]=d
end
x[e]=k
if
g
then
o[f..q..d]={k,e,j,b,i}end
z(e,d,j,f:sub(2),c[L],b,i)return
e
end
function
c.send(d,j,f,b,i)assert(not
b
or
d~="*")d=(b
and"r"or"u")..d
local
g=b
and"r1"or""if#f<=c[H]then
v(nil,g,d,j,f,b)else
local
e=B.ceil(#f/c[H])for
k=1,e
do
v(nil,g..(k~=e
and"f0"or"f"..e),d,j,f:sub((k-1)*c[H]+1,k*c[H]),b)end
end
if
b
then
local
e=d..q..F[d]if
i
then
while
o[e]do
if
not
o[e][5]then
return
e
end
os.sleep(0.05)end
else
return
e
end
end
end
local
function
d(j)local
f,b=j:match"(.*),([^,]+)$"return
f,S(b)end
local
function
j(f,b)local
i,g=d(f)if
b
and
not
b[5]then
local
e=b[4]b[4]=nil
return
i:sub(2),b[3],e
end
while
b
and
b[5]==0
do
g=g%m+1
b=n[i..q..g]end
if
b
then
local
e={}for
k=b[5],1,-1
do
local
E=n[i..q..g]if
not(E
and
E[4])then
return
end
e[k]=E[4]g=(g-2)%m+1
end
for
k=1,b[5]do
g=g%m+1
n[i..q..g][4]=nil
end
return
i:sub(2),b[3],table.concat(e)end
end
function
c.receive(f,b)if
w
then
local
i,g,e=w,d(w)if
n[i]then
w=g..q..e%m+1
if
not
n[i][4]then
return
end
return
j(i,n[i])else
w=nil
end
end
local
i,g,e,k,E,K,r,A,G,h,D,Q=table.unpack(f,1,12)local
s=R.uptime()for
l,a
in
J(o)do
if
s>a[1]+c[N]then
if
a[5]then
if
b
then
b(l,a[4],a[5])end
end
o[l]=nil
elseif
a[5]and
s>x[a[2]]+c[T]then
local
p,y=d(l)a[2]=v(y,a[3],p,a[4],a[5])end
end
for
l,a
in
J(x)do
if
s>a+c[N]then
x[l]=nil
end
end
for
l,a
in
J(u)do
if
s>a[3]+c.routeTime
then
u[l]=nil
end
end
if
i~="modem_message"or(k~=c[I]and
k~=0)or
x[K]then
return
end
r=B[M](r)D=B[M](D)for
l,a
in
J(n)do
if
s>a[1]+c[N]then
n[l]=nil
end
end
x[K]=s
u[h]=u[h]or{g,e,s}if
G~=c[L]and
c.route
then
z(K,r,A,G,h,D,Q)end
if
G==c[L]or
G=="*"then
local
l=A:find"[ra]1"h=(l
and"r"or"u")..h
local
a=h..q..r
if
A=="a1"then
if
o[a]then
while
o[a]and
o[a][5]do
o[a][5]=nil
r=(r-2)%m+1
a=h..q..r
end
else
local
p=F[h]or
0
repeat
p=(p-2)%m+1
a=h..q..p
until
not(o[a]and
o[a][5])a=h..q..p%m+1
local
y=o[a]if
p~=r
and
y
and
not
y[3]:find(O)then
y[3]=y[3]..O
end
end
return
end
local
p
if
not
n[a]or
n[a][4]then
p={s,A,D,Q,S(A:match"f(%d+)")}n[a]=p
if
not
l
then
elseif
A:find(O)or
t[h]and
t[h]%m+1==r
then
t[h]=r
while
n[h..q..t[h]%m+1]do
t[h]=t[h]%m+1
w=w
or
h..q..t[h]end
else
p=nil
end
else
end
if
l
then
v(t[h]or
0,"a1",h,D)end
return
j(a,p)end
end
return
c